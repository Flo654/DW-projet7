{"version":3,"file":"VueFinalModal.esm.js","sources":["../lib/utils/focusTrap.js","../lib/utils/bodyScrollLock.js","../lib/VueFinalModal.vue","../lib/VueFinalModal.vue?vue&type=template&id=2836fdb5&lang.js","../lib/PluginCore.js","../node_modules/style-inject/dist/style-inject.es.js","../lib/utils/errors.js","../lib/Plugin.js"],"sourcesContent":["// stolen from vue-js-modal\n\nconst FOCUSABLE_ELEMENTS_QUERY =\n  'button:not([disabled]), ' +\n  'select:not([disabled]), ' +\n  'a[href]:not([disabled]), ' +\n  'area[href]:not([disabled]), ' +\n  '[contentEditable=\"\"]:not([disabled]), ' +\n  '[contentEditable=\"true\"]:not([disabled]), ' +\n  '[contentEditable=\"TRUE\"]:not([disabled]), ' +\n  'textarea:not([disabled]), ' +\n  'iframe:not([disabled]), ' +\n  'input:not([disabled]), ' +\n  'summary:not([disabled]), ' +\n  '[tabindex]:not([tabindex=\"-1\"])'\n\nconst isTabPressed = event => {\n  return event.key === 'Tab' || event.keyCode === 9\n}\n\nconst querySelectorAll = (element, selector) => {\n  return [...(element.querySelectorAll(selector) || [])]\n}\n\nconst queryFocusableElements = element => {\n  return querySelectorAll(element, FOCUSABLE_ELEMENTS_QUERY)\n}\n\nconst isFocused = element => {\n  return element == document.activeElement\n}\n\nconst isNothingFocused = () => {\n  return !document.activeElement\n}\n\nclass FocusTrap {\n  constructor() {\n    this.root = null\n    this.elements = []\n\n    this.onKeyDown = this.onKeyDown.bind(this)\n    this.enable = this.enable.bind(this)\n    this.disable = this.disable.bind(this)\n    this.firstElement = this.firstElement.bind(this)\n    this.lastElement = this.lastElement.bind(this)\n  }\n\n  lastElement() {\n    return this.elements[this.elements.length - 1] || null\n  }\n\n  firstElement() {\n    return this.elements[0] || null\n  }\n\n  onKeyDown(event) {\n    if (!isTabPressed(event)) {\n      return\n    }\n\n    // SHIFT + TAB\n    if (event.shiftKey) {\n      if (isFocused(this.firstElement())) {\n        this.lastElement().focus()\n        event.preventDefault()\n      }\n      return\n    }\n\n    // TAB\n    if (isNothingFocused() || isFocused(this.lastElement())) {\n      this.firstElement().focus()\n      event.preventDefault()\n      return\n    }\n  }\n\n  enabled() {\n    return !!this.root\n  }\n\n  enable(root) {\n    if (!root) {\n      return\n    }\n\n    this.root = root\n    this.elements = queryFocusableElements(this.root)\n\n    this.root.addEventListener('keydown', this.onKeyDown)\n  }\n\n  disable() {\n    this.root.removeEventListener('keydown', this.onKeyDown)\n    this.root = null\n  }\n}\n\nexport default FocusTrap\n","// stolen from body-scroll-lock\n\n// Older browsers don't support event options, feature detect it.\nlet hasPassiveEvents = false\nif (typeof window !== 'undefined') {\n  const passiveTestOptions = {\n    get passive() {\n      hasPassiveEvents = true\n      return undefined\n    }\n  }\n  window.addEventListener('testPassive', null, passiveTestOptions)\n  window.removeEventListener('testPassive', null, passiveTestOptions)\n}\n\nconst isIosDevice =\n  typeof window !== 'undefined' &&\n  window.navigator &&\n  window.navigator.platform &&\n  (/iP(ad|hone|od)/.test(window.navigator.platform) ||\n    (window.navigator.platform === 'MacIntel' && window.navigator.maxTouchPoints > 1))\n\nlet locks = []\nlet documentListenerAdded = false\nlet initialClientY = -1\nlet previousBodyOverflowSetting\nlet previousBodyPaddingRight\n\n// returns true if `el` should be allowed to receive touchmove events.\nconst allowTouchMove = el =>\n  locks.some(lock => {\n    if (lock.options.allowTouchMove && lock.options.allowTouchMove(el)) {\n      return true\n    }\n\n    return false\n  })\n\nconst preventDefault = rawEvent => {\n  const e = rawEvent || window.event\n\n  // For the case whereby consumers adds a touchmove event listener to document.\n  // Recall that we do document.addEventListener('touchmove', preventDefault, { passive: false })\n  // in disableBodyScroll - so if we provide this opportunity to allowTouchMove, then\n  // the touchmove event on document will break.\n  if (allowTouchMove(e.target)) {\n    return true\n  }\n  // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom).\n  if (e.touches.length > 1) return true\n\n  if (e.preventDefault) e.preventDefault()\n\n  return false\n}\n\nconst setOverflowHidden = options => {\n  // If previousBodyPaddingRight is already set, don't set it again.\n  if (previousBodyPaddingRight === undefined) {\n    const reserveScrollBarGap = !!options && options.reserveScrollBarGap === true\n    const scrollBarGap = window.innerWidth - document.documentElement.clientWidth\n\n    if (reserveScrollBarGap && scrollBarGap > 0) {\n      const computedBodyPaddingRight = parseInt(getComputedStyle(document.body).getPropertyValue('padding-right'), 10)\n      previousBodyPaddingRight = document.body.style.paddingRight\n      document.body.style.paddingRight = `${computedBodyPaddingRight + scrollBarGap}px`\n    }\n  }\n  // If previousBodyOverflowSetting is already set, don't set it again.\n  if (previousBodyOverflowSetting === undefined) {\n    previousBodyOverflowSetting = document.body.style.overflow\n    document.body.style.overflow = 'hidden'\n  }\n}\n\nconst restoreOverflowSetting = () => {\n  if (previousBodyPaddingRight !== undefined) {\n    document.body.style.paddingRight = previousBodyPaddingRight\n\n    // Restore previousBodyPaddingRight to undefined so setOverflowHidden knows it\n    // can be set again.\n    previousBodyPaddingRight = undefined\n  }\n\n  if (previousBodyOverflowSetting !== undefined) {\n    document.body.style.overflow = previousBodyOverflowSetting\n\n    // Restore previousBodyOverflowSetting to undefined\n    // so setOverflowHidden knows it can be set again.\n    previousBodyOverflowSetting = undefined\n  }\n}\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions\nconst isTargetElementTotallyScrolled = targetElement =>\n  targetElement ? targetElement.scrollHeight - targetElement.scrollTop <= targetElement.clientHeight : false\n\nconst handleScroll = (event, targetElement) => {\n  const clientY = event.targetTouches[0].clientY - initialClientY\n\n  if (allowTouchMove(event.target)) {\n    return false\n  }\n\n  if (targetElement && targetElement.scrollTop === 0 && clientY > 0) {\n    // element is at the top of its scroll.\n    return preventDefault(event)\n  }\n\n  if (isTargetElementTotallyScrolled(targetElement) && clientY < 0) {\n    // element is at the bottom of its scroll.\n    return preventDefault(event)\n  }\n\n  event.stopPropagation()\n  return true\n}\n\nexport const disableBodyScroll = (targetElement, options) => {\n  // targetElement must be provided\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error(\n      'disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.'\n    )\n    return\n  }\n\n  // disableBodyScroll must not have been called on this targetElement before\n  if (locks.some(lock => lock.targetElement === targetElement)) {\n    return\n  }\n\n  const lock = {\n    targetElement,\n    options: options || {}\n  }\n\n  locks = [...locks, lock]\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = event => {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        initialClientY = event.targetTouches[0].clientY\n      }\n    }\n    targetElement.ontouchmove = event => {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        handleScroll(event, targetElement)\n      }\n    }\n\n    if (!documentListenerAdded) {\n      document.addEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined)\n      documentListenerAdded = true\n    }\n  } else {\n    setOverflowHidden(options)\n  }\n}\n\nexport const clearAllBodyScrollLocks = () => {\n  if (isIosDevice) {\n    // Clear all locks ontouchstart/ontouchmove handlers, and the references.\n    locks.forEach(lock => {\n      lock.targetElement.ontouchstart = null\n      lock.targetElement.ontouchmove = null\n    })\n\n    if (documentListenerAdded) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined)\n      documentListenerAdded = false\n    }\n    // Reset initial clientY.\n    initialClientY = -1\n  } else {\n    restoreOverflowSetting()\n  }\n\n  locks = []\n}\n\nexport const enableBodyScroll = targetElement => {\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error(\n      'enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.'\n    )\n    return\n  }\n\n  locks = locks.filter(lock => lock.targetElement !== targetElement)\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = null\n    targetElement.ontouchmove = null\n\n    if (documentListenerAdded && locks.length === 0) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined)\n      documentListenerAdded = false\n    }\n  } else if (!locks.length) {\n    restoreOverflowSetting()\n  }\n}\n","<template>\n  <div\n    v-if=\"ssr || visible\"\n    v-show=\"!ssr || visible\"\n    ref=\"root\"\n    :style=\"bindStyle\"\n    class=\"vfm vfm--inset\"\n    :class=\"[attach === false ? 'vfm--fixed' : 'vfm--absolute', { 'vfm--prevent-none': preventClick }]\"\n    @keydown=\"onEsc\"\n  >\n    <transition\n      :name=\"overlayTransition\"\n      @before-enter=\"beforeOverlayEnter\"\n      @after-enter=\"afterOverlayEnter\"\n      @before-leave=\"beforeOverlayLeave\"\n      @after-leave=\"afterOverlayLeave\"\n    >\n      <div\n        v-if=\"!hideOverlay && visibility.overlay\"\n        class=\"vfm__overlay vfm--overlay vfm--absolute vfm--inset\"\n        :class=\"overlayClass\"\n        :style=\"overlayStyle\"\n      ></div>\n    </transition>\n    <transition\n      :name=\"transition\"\n      @before-enter=\"beforeModalEnter\"\n      @after-enter=\"afterModalEnter\"\n      @before-leave=\"beforeModalLeave\"\n      @after-leave=\"afterModalLeave\"\n    >\n      <div\n        v-show=\"visibility.modal\"\n        ref=\"vfmContainer\"\n        class=\"vfm__container vfm--absolute vfm--inset vfm--outline-none\"\n        :class=\"classes\"\n        :style=\"styles\"\n        :aria-expanded=\"visibility.modal.toString()\"\n        role=\"dialog\"\n        aria-modal=\"true\"\n        tabindex=\"-1\"\n        @click.self=\"onClickContainer\"\n      >\n        <div\n          ref=\"vfmContent\"\n          class=\"vfm__content\"\n          :class=\"[contentClass, { 'vfm--prevent-auto': preventClick }]\"\n          :style=\"contentStyle\"\n        >\n          <slot :params=\"params\" />\n        </div>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, onMounted, onBeforeUnmount, computed, nextTick, watch, inject } from 'vue'\nimport FocusTrap from './utils/focusTrap.js'\nimport { disableBodyScroll, enableBodyScroll } from './utils/bodyScrollLock'\n\nconst TransitionState = {\n  Enter: 'enter',\n  Entering: 'entering',\n  Leave: 'leave',\n  Leaving: 'leavng'\n}\n\nexport default {\n  name: 'VueFinalModal',\n  props: {\n    name: { type: String, default: null },\n    modelValue: { type: Boolean, default: false },\n    ssr: { type: Boolean, default: true },\n    classes: { type: [String, Object, Array], default: '' },\n    overlayClass: { type: [String, Object, Array], default: '' },\n    contentClass: { type: [String, Object, Array], default: '' },\n    styles: { type: [String, Object, Array], default: '' },\n    overlayStyle: { type: [String, Object, Array], default: '' },\n    contentStyle: { type: [String, Object, Array], default: '' },\n    lockScroll: { type: Boolean, default: true },\n    hideOverlay: { type: Boolean, default: false },\n    clickToClose: { type: Boolean, default: true },\n    escToClose: { type: Boolean, default: false },\n    preventClick: { type: Boolean, default: false },\n    attach: {\n      type: null,\n      default: false,\n      validator(val) {\n        const type = typeof val\n\n        if (type === 'boolean' || type === 'string') return true\n\n        return val.nodeType === Node.ELEMENT_NODE\n      }\n    },\n    transition: { type: String, default: 'vfm' },\n    overlayTransition: { type: String, default: 'vfm' },\n    zIndexAuto: { type: Boolean, default: true },\n    zIndexBase: { type: [String, Number], default: 1000 },\n    zIndex: { type: [Boolean, String, Number], default: false },\n    focusRetain: { type: Boolean, default: true },\n    focusTrap: { type: Boolean, default: false }\n  },\n  emits: ['update:modelValue', 'click-outside', 'before-open', 'opened', 'before-close', 'closed'],\n  setup(props, { emit }) {\n    const uid = Symbol('vfm')\n    const root = ref(null)\n    const vfmContent = ref(null)\n    const vfmContainer = ref(null)\n\n    const $vfm = inject(props.options.key)\n\n    const modalStackIndex = ref(null)\n    const $focusTrap = new FocusTrap()\n\n    const visible = ref(false)\n    const visibility = reactive({\n      modal: false,\n      overlay: false\n    })\n    const overlayTransitionState = ref(null)\n    const modalTransitionState = ref(null)\n    const _stopEvent = ref(false)\n    const params = ref({})\n\n    const isComponentReadyToBeDestroyed = computed(() => {\n      return (\n        (props.hideOverlay || overlayTransitionState.value === TransitionState.Leave) &&\n        modalTransitionState.value === TransitionState.Leave\n      )\n    })\n\n    const calculateZIndex = computed(() => {\n      if (props.zIndex === false) {\n        if (props.zIndexAuto) {\n          return +props.zIndexBase + 2 * (modalStackIndex.value || 0)\n        } else {\n          return false\n        }\n      } else {\n        return props.zIndex\n      }\n    })\n\n    const bindStyle = computed(() => {\n      return {\n        ...(calculateZIndex.value !== false && {\n          zIndex: calculateZIndex.value\n        })\n      }\n    })\n\n    watch(\n      () => props.modelValue,\n      value => {\n        if (_stopEvent.value) {\n          _stopEvent.value = false\n          return\n        }\n        mounted()\n        if (!value) {\n          if (emitEvent('before-close', true)) {\n            return\n          }\n          close()\n        }\n      }\n    )\n    watch(() => props.lockScroll, handleLockScroll)\n    watch(\n      () => props.hideOverlay,\n      value => {\n        if (props.modelValue && !value) {\n          visibility.overlay = true\n        }\n      }\n    )\n    watch(() => props.attach, mounted)\n    watch(\n      isComponentReadyToBeDestroyed,\n      val => {\n        if (val) {\n          visible.value = false\n        }\n      },\n      {\n        flush: 'post'\n      }\n    )\n\n    $vfm.modals.push(getModalInfo())\n\n    onMounted(() => {\n      mounted()\n    })\n    onBeforeUnmount(() => {\n      close()\n      props.lockScroll && enableBodyScroll(vfmContent)\n      root?.value?.remove()\n\n      let index = $vfm.modals.findIndex(vm => vm.uid === uid)\n      $vfm.modals.splice(index, 1)\n    })\n    function getModalInfo() {\n      return {\n        uid,\n        props,\n        emit,\n        vfmContainer,\n        vfmContent,\n        getAttachElement,\n        modalStackIndex,\n        visibility,\n        handleLockScroll,\n        $focusTrap,\n        toggle,\n        params\n      }\n    }\n    function mounted() {\n      if (props.modelValue) {\n        if (emitEvent('before-open', false)) {\n          return\n        }\n\n        let target = getAttachElement()\n        if (target || props.attach === false) {\n          props.attach !== false && target.appendChild(root.value)\n\n          let index = $vfm.openedModals.findIndex(vm => vm.uid === uid)\n\n          if (index !== -1) {\n            // if this is already exist in modalStack, delete it\n            $vfm.openedModals.splice(index, 1)\n          }\n          $vfm.openedModals.push(getModalInfo())\n\n          modalStackIndex.value = $vfm.openedModals.length - 1\n\n          handleLockScroll()\n\n          $vfm.openedModals\n            .filter(vm => vm.uid !== uid)\n            .forEach((vm, index) => {\n              if (vm.getAttachElement() === target) {\n                // if vm and this have the same attach element\n                vm.modalStackIndex.value = index\n                vm.visibility.overlay = false\n              }\n            })\n\n          visible.value = true\n          nextTick(() => {\n            startTransitionEnter()\n          })\n        } else if (target !== false) {\n          console.warn('Unable to locate target '.concat(props.attach))\n        }\n      }\n    }\n    function close() {\n      let index = $vfm.openedModals.findIndex(vm => vm.uid === uid)\n      if (index !== -1) {\n        // remove this in modalStack\n        $vfm.openedModals.splice(index, 1)\n      }\n      if ($vfm.openedModals.length > 0) {\n        // If there are still nested modals opened\n        const $_vm = $vfm.openedModals[$vfm.openedModals.length - 1]\n        $_vm.props.focusTrap && $_vm.$focusTrap.firstElement().focus()\n        if ($_vm.props.focusRetain || $_vm.props.focusTrap) {\n          $_vm.vfmContainer.value.focus()\n        }\n        !$_vm.props.hideOverlay && ($_vm.visibility.overlay = true)\n      }\n      startTransitionLeave()\n    }\n    function handleLockScroll() {\n      if (props.modelValue) {\n        if (props.lockScroll) {\n          disableBodyScroll(vfmContent, {\n            reserveScrollBarGap: true\n          })\n        } else {\n          enableBodyScroll(vfmContent)\n        }\n      }\n    }\n    function getAttachElement() {\n      let target\n      if (props.attach === false) {\n        target = false\n      } else if (typeof props.attach === 'string') {\n        // CSS selector\n        if (window) {\n          target = window.document.querySelector(props.attach)\n        } else {\n          target = false\n        }\n      } else {\n        // DOM Element\n        target = props.attach\n      }\n      return target\n    }\n    function startTransitionEnter() {\n      visibility.overlay = true\n      visibility.modal = true\n    }\n    function startTransitionLeave() {\n      visibility.overlay = false\n      visibility.modal = false\n    }\n\n    function beforeOverlayEnter() {\n      overlayTransitionState.value = TransitionState.Entering\n    }\n    function afterOverlayEnter() {\n      overlayTransitionState.value = TransitionState.Enter\n    }\n    function beforeOverlayLeave() {\n      overlayTransitionState.value = TransitionState.Leaving\n    }\n    function afterOverlayLeave() {\n      overlayTransitionState.value = TransitionState.Leave\n    }\n    function beforeModalEnter() {\n      modalTransitionState.value = TransitionState.Entering\n    }\n    function afterModalEnter() {\n      modalTransitionState.value = TransitionState.Enter\n      if (props.focusRetain || props.focusTrap) {\n        vfmContainer.value.focus()\n      }\n      if (props.focusTrap) {\n        $focusTrap.enable(vfmContainer.value)\n      }\n      emit('opened', createModalEvent({ type: 'opened' }))\n    }\n    function beforeModalLeave() {\n      modalTransitionState.value = TransitionState.Leaving\n\n      if ($focusTrap.enabled()) {\n        $focusTrap.disable()\n      }\n    }\n    function afterModalLeave() {\n      modalTransitionState.value = TransitionState.Leave\n      modalStackIndex.value = null\n      props.lockScroll && enableBodyScroll(vfmContent)\n\n      let stopEvent = false\n      const event = createModalEvent({\n        type: 'closed',\n        stop() {\n          stopEvent = true\n        }\n      })\n      emit('closed', event)\n      if (stopEvent) return\n      params.value = {}\n    }\n    function onClickContainer() {\n      emit('click-outside', createModalEvent({ type: 'click-outside' }))\n      props.clickToClose && emit('update:modelValue', false)\n    }\n    function onEsc(evt) {\n      if (evt.keyCode === 27 && visible.value && props.escToClose) {\n        emit('update:modelValue', false)\n      }\n    }\n    function createModalEvent(eventProps = {}) {\n      return {\n        ref: getModalInfo(),\n        ...eventProps\n      }\n    }\n    function emitEvent(eventType, value) {\n      let stopEvent = false\n      const event = createModalEvent({\n        type: eventType,\n        stop() {\n          stopEvent = true\n        }\n      })\n      emit(eventType, event)\n      if (stopEvent) {\n        _stopEvent.value = true\n        nextTick(() => {\n          emit('update:modelValue', value)\n        })\n        return true\n      }\n      return false\n    }\n    function toggle(show, _params) {\n      const value = typeof show === 'boolean' ? show : !props.modelValue\n      if (value && arguments.length === 2) {\n        params.value = _params\n      }\n      emit('update:modelValue', value)\n    }\n    return {\n      root,\n      vfmContent,\n      vfmContainer,\n      visible,\n      visibility,\n      params,\n      calculateZIndex,\n      bindStyle,\n      beforeOverlayEnter,\n      afterOverlayEnter,\n      beforeOverlayLeave,\n      afterOverlayLeave,\n      beforeModalEnter,\n      afterModalEnter,\n      beforeModalLeave,\n      afterModalLeave,\n      onClickContainer,\n      onEsc\n    }\n  }\n}\n</script>\n\n<style lang=\"css\" scoped>\n.vfm--fixed {\n  position: fixed;\n}\n.vfm--absolute {\n  position: absolute;\n}\n.vfm--inset {\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}\n.vfm--overlay {\n  background-color: rgba(0, 0, 0, 0.5);\n}\n.vfm--prevent-none {\n  pointer-events: none;\n}\n.vfm--prevent-auto {\n  pointer-events: auto;\n}\n.vfm--outline-none:focus {\n  outline: none;\n}\n.vfm-enter-active,\n.vfm-leave-active {\n  transition: opacity 0.2s;\n}\n.vfm-enter-from,\n.vfm-leave-to {\n  opacity: 0;\n}\n</style>\n","<template>\n  <div\n    v-if=\"ssr || visible\"\n    v-show=\"!ssr || visible\"\n    ref=\"root\"\n    :style=\"bindStyle\"\n    class=\"vfm vfm--inset\"\n    :class=\"[attach === false ? 'vfm--fixed' : 'vfm--absolute', { 'vfm--prevent-none': preventClick }]\"\n    @keydown=\"onEsc\"\n  >\n    <transition\n      :name=\"overlayTransition\"\n      @before-enter=\"beforeOverlayEnter\"\n      @after-enter=\"afterOverlayEnter\"\n      @before-leave=\"beforeOverlayLeave\"\n      @after-leave=\"afterOverlayLeave\"\n    >\n      <div\n        v-if=\"!hideOverlay && visibility.overlay\"\n        class=\"vfm__overlay vfm--overlay vfm--absolute vfm--inset\"\n        :class=\"overlayClass\"\n        :style=\"overlayStyle\"\n      ></div>\n    </transition>\n    <transition\n      :name=\"transition\"\n      @before-enter=\"beforeModalEnter\"\n      @after-enter=\"afterModalEnter\"\n      @before-leave=\"beforeModalLeave\"\n      @after-leave=\"afterModalLeave\"\n    >\n      <div\n        v-show=\"visibility.modal\"\n        ref=\"vfmContainer\"\n        class=\"vfm__container vfm--absolute vfm--inset vfm--outline-none\"\n        :class=\"classes\"\n        :style=\"styles\"\n        :aria-expanded=\"visibility.modal.toString()\"\n        role=\"dialog\"\n        aria-modal=\"true\"\n        tabindex=\"-1\"\n        @click.self=\"onClickContainer\"\n      >\n        <div\n          ref=\"vfmContent\"\n          class=\"vfm__content\"\n          :class=\"[contentClass, { 'vfm--prevent-auto': preventClick }]\"\n          :style=\"contentStyle\"\n        >\n          <slot :params=\"params\" />\n        </div>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, onMounted, onBeforeUnmount, computed, nextTick, watch, inject } from 'vue'\nimport FocusTrap from './utils/focusTrap.js'\nimport { disableBodyScroll, enableBodyScroll } from './utils/bodyScrollLock'\n\nconst TransitionState = {\n  Enter: 'enter',\n  Entering: 'entering',\n  Leave: 'leave',\n  Leaving: 'leavng'\n}\n\nexport default {\n  name: 'VueFinalModal',\n  props: {\n    name: { type: String, default: null },\n    modelValue: { type: Boolean, default: false },\n    ssr: { type: Boolean, default: true },\n    classes: { type: [String, Object, Array], default: '' },\n    overlayClass: { type: [String, Object, Array], default: '' },\n    contentClass: { type: [String, Object, Array], default: '' },\n    styles: { type: [String, Object, Array], default: '' },\n    overlayStyle: { type: [String, Object, Array], default: '' },\n    contentStyle: { type: [String, Object, Array], default: '' },\n    lockScroll: { type: Boolean, default: true },\n    hideOverlay: { type: Boolean, default: false },\n    clickToClose: { type: Boolean, default: true },\n    escToClose: { type: Boolean, default: false },\n    preventClick: { type: Boolean, default: false },\n    attach: {\n      type: null,\n      default: false,\n      validator(val) {\n        const type = typeof val\n\n        if (type === 'boolean' || type === 'string') return true\n\n        return val.nodeType === Node.ELEMENT_NODE\n      }\n    },\n    transition: { type: String, default: 'vfm' },\n    overlayTransition: { type: String, default: 'vfm' },\n    zIndexAuto: { type: Boolean, default: true },\n    zIndexBase: { type: [String, Number], default: 1000 },\n    zIndex: { type: [Boolean, String, Number], default: false },\n    focusRetain: { type: Boolean, default: true },\n    focusTrap: { type: Boolean, default: false }\n  },\n  emits: ['update:modelValue', 'click-outside', 'before-open', 'opened', 'before-close', 'closed'],\n  setup(props, { emit }) {\n    const uid = Symbol('vfm')\n    const root = ref(null)\n    const vfmContent = ref(null)\n    const vfmContainer = ref(null)\n\n    const $vfm = inject(props.options.key)\n\n    const modalStackIndex = ref(null)\n    const $focusTrap = new FocusTrap()\n\n    const visible = ref(false)\n    const visibility = reactive({\n      modal: false,\n      overlay: false\n    })\n    const overlayTransitionState = ref(null)\n    const modalTransitionState = ref(null)\n    const _stopEvent = ref(false)\n    const params = ref({})\n\n    const isComponentReadyToBeDestroyed = computed(() => {\n      return (\n        (props.hideOverlay || overlayTransitionState.value === TransitionState.Leave) &&\n        modalTransitionState.value === TransitionState.Leave\n      )\n    })\n\n    const calculateZIndex = computed(() => {\n      if (props.zIndex === false) {\n        if (props.zIndexAuto) {\n          return +props.zIndexBase + 2 * (modalStackIndex.value || 0)\n        } else {\n          return false\n        }\n      } else {\n        return props.zIndex\n      }\n    })\n\n    const bindStyle = computed(() => {\n      return {\n        ...(calculateZIndex.value !== false && {\n          zIndex: calculateZIndex.value\n        })\n      }\n    })\n\n    watch(\n      () => props.modelValue,\n      value => {\n        if (_stopEvent.value) {\n          _stopEvent.value = false\n          return\n        }\n        mounted()\n        if (!value) {\n          if (emitEvent('before-close', true)) {\n            return\n          }\n          close()\n        }\n      }\n    )\n    watch(() => props.lockScroll, handleLockScroll)\n    watch(\n      () => props.hideOverlay,\n      value => {\n        if (props.modelValue && !value) {\n          visibility.overlay = true\n        }\n      }\n    )\n    watch(() => props.attach, mounted)\n    watch(\n      isComponentReadyToBeDestroyed,\n      val => {\n        if (val) {\n          visible.value = false\n        }\n      },\n      {\n        flush: 'post'\n      }\n    )\n\n    $vfm.modals.push(getModalInfo())\n\n    onMounted(() => {\n      mounted()\n    })\n    onBeforeUnmount(() => {\n      close()\n      props.lockScroll && enableBodyScroll(vfmContent)\n      root?.value?.remove()\n\n      let index = $vfm.modals.findIndex(vm => vm.uid === uid)\n      $vfm.modals.splice(index, 1)\n    })\n    function getModalInfo() {\n      return {\n        uid,\n        props,\n        emit,\n        vfmContainer,\n        vfmContent,\n        getAttachElement,\n        modalStackIndex,\n        visibility,\n        handleLockScroll,\n        $focusTrap,\n        toggle,\n        params\n      }\n    }\n    function mounted() {\n      if (props.modelValue) {\n        if (emitEvent('before-open', false)) {\n          return\n        }\n\n        let target = getAttachElement()\n        if (target || props.attach === false) {\n          props.attach !== false && target.appendChild(root.value)\n\n          let index = $vfm.openedModals.findIndex(vm => vm.uid === uid)\n\n          if (index !== -1) {\n            // if this is already exist in modalStack, delete it\n            $vfm.openedModals.splice(index, 1)\n          }\n          $vfm.openedModals.push(getModalInfo())\n\n          modalStackIndex.value = $vfm.openedModals.length - 1\n\n          handleLockScroll()\n\n          $vfm.openedModals\n            .filter(vm => vm.uid !== uid)\n            .forEach((vm, index) => {\n              if (vm.getAttachElement() === target) {\n                // if vm and this have the same attach element\n                vm.modalStackIndex.value = index\n                vm.visibility.overlay = false\n              }\n            })\n\n          visible.value = true\n          nextTick(() => {\n            startTransitionEnter()\n          })\n        } else if (target !== false) {\n          console.warn('Unable to locate target '.concat(props.attach))\n        }\n      }\n    }\n    function close() {\n      let index = $vfm.openedModals.findIndex(vm => vm.uid === uid)\n      if (index !== -1) {\n        // remove this in modalStack\n        $vfm.openedModals.splice(index, 1)\n      }\n      if ($vfm.openedModals.length > 0) {\n        // If there are still nested modals opened\n        const $_vm = $vfm.openedModals[$vfm.openedModals.length - 1]\n        $_vm.props.focusTrap && $_vm.$focusTrap.firstElement().focus()\n        if ($_vm.props.focusRetain || $_vm.props.focusTrap) {\n          $_vm.vfmContainer.value.focus()\n        }\n        !$_vm.props.hideOverlay && ($_vm.visibility.overlay = true)\n      }\n      startTransitionLeave()\n    }\n    function handleLockScroll() {\n      if (props.modelValue) {\n        if (props.lockScroll) {\n          disableBodyScroll(vfmContent, {\n            reserveScrollBarGap: true\n          })\n        } else {\n          enableBodyScroll(vfmContent)\n        }\n      }\n    }\n    function getAttachElement() {\n      let target\n      if (props.attach === false) {\n        target = false\n      } else if (typeof props.attach === 'string') {\n        // CSS selector\n        if (window) {\n          target = window.document.querySelector(props.attach)\n        } else {\n          target = false\n        }\n      } else {\n        // DOM Element\n        target = props.attach\n      }\n      return target\n    }\n    function startTransitionEnter() {\n      visibility.overlay = true\n      visibility.modal = true\n    }\n    function startTransitionLeave() {\n      visibility.overlay = false\n      visibility.modal = false\n    }\n\n    function beforeOverlayEnter() {\n      overlayTransitionState.value = TransitionState.Entering\n    }\n    function afterOverlayEnter() {\n      overlayTransitionState.value = TransitionState.Enter\n    }\n    function beforeOverlayLeave() {\n      overlayTransitionState.value = TransitionState.Leaving\n    }\n    function afterOverlayLeave() {\n      overlayTransitionState.value = TransitionState.Leave\n    }\n    function beforeModalEnter() {\n      modalTransitionState.value = TransitionState.Entering\n    }\n    function afterModalEnter() {\n      modalTransitionState.value = TransitionState.Enter\n      if (props.focusRetain || props.focusTrap) {\n        vfmContainer.value.focus()\n      }\n      if (props.focusTrap) {\n        $focusTrap.enable(vfmContainer.value)\n      }\n      emit('opened', createModalEvent({ type: 'opened' }))\n    }\n    function beforeModalLeave() {\n      modalTransitionState.value = TransitionState.Leaving\n\n      if ($focusTrap.enabled()) {\n        $focusTrap.disable()\n      }\n    }\n    function afterModalLeave() {\n      modalTransitionState.value = TransitionState.Leave\n      modalStackIndex.value = null\n      props.lockScroll && enableBodyScroll(vfmContent)\n\n      let stopEvent = false\n      const event = createModalEvent({\n        type: 'closed',\n        stop() {\n          stopEvent = true\n        }\n      })\n      emit('closed', event)\n      if (stopEvent) return\n      params.value = {}\n    }\n    function onClickContainer() {\n      emit('click-outside', createModalEvent({ type: 'click-outside' }))\n      props.clickToClose && emit('update:modelValue', false)\n    }\n    function onEsc(evt) {\n      if (evt.keyCode === 27 && visible.value && props.escToClose) {\n        emit('update:modelValue', false)\n      }\n    }\n    function createModalEvent(eventProps = {}) {\n      return {\n        ref: getModalInfo(),\n        ...eventProps\n      }\n    }\n    function emitEvent(eventType, value) {\n      let stopEvent = false\n      const event = createModalEvent({\n        type: eventType,\n        stop() {\n          stopEvent = true\n        }\n      })\n      emit(eventType, event)\n      if (stopEvent) {\n        _stopEvent.value = true\n        nextTick(() => {\n          emit('update:modelValue', value)\n        })\n        return true\n      }\n      return false\n    }\n    function toggle(show, _params) {\n      const value = typeof show === 'boolean' ? show : !props.modelValue\n      if (value && arguments.length === 2) {\n        params.value = _params\n      }\n      emit('update:modelValue', value)\n    }\n    return {\n      root,\n      vfmContent,\n      vfmContainer,\n      visible,\n      visibility,\n      params,\n      calculateZIndex,\n      bindStyle,\n      beforeOverlayEnter,\n      afterOverlayEnter,\n      beforeOverlayLeave,\n      afterOverlayLeave,\n      beforeModalEnter,\n      afterModalEnter,\n      beforeModalLeave,\n      afterModalLeave,\n      onClickContainer,\n      onEsc\n    }\n  }\n}\n</script>\n\n<style lang=\"css\" scoped>\n.vfm--fixed {\n  position: fixed;\n}\n.vfm--absolute {\n  position: absolute;\n}\n.vfm--inset {\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}\n.vfm--overlay {\n  background-color: rgba(0, 0, 0, 0.5);\n}\n.vfm--prevent-none {\n  pointer-events: none;\n}\n.vfm--prevent-auto {\n  pointer-events: auto;\n}\n.vfm--outline-none:focus {\n  outline: none;\n}\n.vfm-enter-active,\n.vfm-leave-active {\n  transition: opacity 0.2s;\n}\n.vfm-enter-from,\n.vfm-leave-to {\n  opacity: 0;\n}\n</style>\n","import VueFinalModal from './VueFinalModal.vue'\n\nfunction createVfm() {\n  let vfm\n\n  return function() {\n    vfm = {\n      show(name, ...args) {\n        this.toggle(name, true, ...args)\n      },\n      hide(name) {\n        this.toggle(name, false)\n      },\n      hideAll() {\n        this.openedModals.forEach(modal => {\n          modal.emit('update:modelValue', false)\n        })\n      },\n      toggle(name, ...args) {\n        const modal = this.get(name)\n        if (modal !== undefined) {\n          modal.toggle(...args)\n        }\n      },\n      get(name) {\n        return this.modals.find(modal => modal.props.name === name)\n      },\n      openedModals: [],\n      modals: []\n    }\n    return vfm\n  }\n}\n\nexport function bindPrototype(app, options) {\n  const vfm = createVfm()()\n  Object.defineProperty(app.config.globalProperties, options.key, {\n    get() {\n      return vfm\n    }\n  })\n  app.provide(options.key, vfm)\n}\n\nexport function registComponent(app, options) {\n  app.component(options.componentName, {\n    ...VueFinalModal,\n    props: { ...VueFinalModal.props, options: { type: Object, default: () => options } }\n  })\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","export const DUPLICATE_PLUGIN_COMPONENT =\n  '[vue-final-modal] Duplicate registration API key and componentName of VueFinalModal.'\n\nexport const DUPLICATE_COMPONENT = '[vue-final-modal] Duplicate registration componentName of VueFinalModal.'\n","import { bindPrototype, registComponent } from './PluginCore'\nimport { DUPLICATE_PLUGIN_COMPONENT, DUPLICATE_COMPONENT } from './utils/errors'\n\nconst defaultOptions = {\n  componentName: 'VueFinalModal',\n  key: '$vfm'\n}\n\nconst Plugin = () => ({\n  install(app, options) {\n    const _options = Object.assign({}, defaultOptions, options)\n    const isDuplicateKey = app.config.globalProperties[_options.key]\n    const isDuplicateComponent = app._context.components[_options.componentName]\n\n    if (isDuplicateComponent) {\n      if (typeof window !== 'undefined') {\n        console.warn(isDuplicateKey ? DUPLICATE_PLUGIN_COMPONENT : DUPLICATE_COMPONENT)\n      }\n    } else {\n      if (!isDuplicateKey) {\n        bindPrototype(app, _options)\n      }\n      registComponent(app, _options)\n    }\n  }\n})\n\nexport default Plugin\n"],"names":["queryFocusableElements","element","selector","querySelectorAll","isFocused","document","activeElement","FocusTrap","root","elements","onKeyDown","this","bind","enable","disable","firstElement","lastElement","length","event","key","keyCode","isTabPressed","shiftKey","focus","preventDefault","addEventListener","removeEventListener","hasPassiveEvents","window","passiveTestOptions","previousBodyOverflowSetting","previousBodyPaddingRight","isIosDevice","navigator","platform","test","maxTouchPoints","locks","documentListenerAdded","initialClientY","allowTouchMove","el","some","lock","options","rawEvent","e","target","touches","disableBodyScroll","targetElement","ontouchstart","targetTouches","clientY","ontouchmove","scrollTop","scrollHeight","clientHeight","isTargetElementTotallyScrolled","stopPropagation","handleScroll","passive","undefined","reserveScrollBarGap","scrollBarGap","innerWidth","documentElement","clientWidth","computedBodyPaddingRight","parseInt","getComputedStyle","body","getPropertyValue","style","paddingRight","overflow","setOverflowHidden","console","error","enableBodyScroll","filter","TransitionState","name","props","type","String","default","modelValue","Boolean","ssr","classes","Object","Array","overlayClass","contentClass","styles","overlayStyle","contentStyle","lockScroll","hideOverlay","clickToClose","escToClose","preventClick","attach","validator","val","nodeType","Node","ELEMENT_NODE","transition","overlayTransition","zIndexAuto","zIndexBase","Number","zIndex","focusRetain","focusTrap","emits","setup","emit","uid","Symbol","ref","vfmContent","vfmContainer","$vfm","inject","modalStackIndex","$focusTrap","visible","visibility","reactive","modal","overlay","overlayTransitionState","modalTransitionState","_stopEvent","params","isComponentReadyToBeDestroyed","computed","value","calculateZIndex","bindStyle","getModalInfo","getAttachElement","handleLockScroll","toggle","mounted","emitEvent","appendChild","index","openedModals","findIndex","vm","splice","push","forEach","nextTick","warn","concat","close","$_vm","querySelector","createModalEvent","eventProps","eventType","stopEvent","stop","show","_params","arguments","watch","flush","modals","onMounted","onBeforeUnmount","remove","beforeOverlayEnter","afterOverlayEnter","beforeOverlayLeave","afterOverlayLeave","beforeModalEnter","afterModalEnter","beforeModalLeave","enabled","afterModalLeave","onClickContainer","onEsc","evt","$props","$setup","_createBlock","class","onKeydown","_createVNode","toString","role","tabindex","onClick","_renderSlot","bindPrototype","app","vfm","args","hide","hideAll","get","find","defineProperty","config","globalProperties","provide","css","insertAt","head","getElementsByTagName","createElement","firstChild","insertBefore","styleSheet","cssText","createTextNode","defaultOptions","componentName","install","_options","assign","isDuplicateKey","_context","components","component","VueFinalModal","registComponent"],"mappings":"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"}